jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stable:
        rustup_toolchain: stable-${{ parameters.target }}
        features: ""
#      beta:
#        rustup_toolchain: beta-${{ parameters.target }}
#        features: ""
#      nightly:
#        rustup_toolchain: nightly-${{ parameters.target }}
#        features: ""
      ${{ if startsWith(parameters.name, 'Windows') }}:
        stable-winrt:
          rustup_toolchain: stable-${{ parameters.target }}
          features: "winrt"
#        beta-winrt:
#          rustup_toolchain: beta-${{ parameters.target }}
#          features: "winrt"
#        nightly-winrt:
#          rustup_toolchain: nightly-${{ parameters.target }}
#          features: "winrt"
      ${{ if not(startsWith(parameters.name, 'Windows')) }}:
        stable-jack:
          rustup_toolchain: stable-${{ parameters.target }}
          features: "jack"
#        beta-jack:
#          rustup_toolchain: beta-${{ parameters.target }}
#          features: "jack"
#        nightly-jack:
#          rustup_toolchain: nightly-${{ parameters.target }}
#          features: "jack"
  steps:
  - ${{ if not(startsWith(parameters.name, 'Windows')) }}:
    # Linux and macOS
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        export PATH="$HOME/.cargo/bin:$PATH"
        echo "##vso[task.setvariable variable=PATH;]$PATH"
      displayName: Install Rust
  - ${{ if startsWith(parameters.name, 'Linux') }}:
    # Linux only
    - script: |
        sudo apt-get update && sudo apt-get install -y libasound2-dev libjack-jackd2-dev
      displayName: Install ALSA and Jack dependencies
  - ${{ if startsWith(parameters.name, 'macOS') }}:
    # macOS only
    - script: |
        if [ "$FEATURES" = "jack" ]; then
          curl -LOS https://github.com/jackaudio/jackaudio.github.com/releases/download/1.9.11/JackOSX.0.92_b3.zip && unzip JackOSX.0.92_b3.zip && sudo installer -pkg JackOSX.0.92_b3.pkg -target /
        fi
      displayName: Install Jack dependencies
  - ${{ if startsWith(parameters.name, 'Windows') }}:
    # Windows
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: Install Rust (Windows)
  # All platforms
  - script: |
        rustc -Vv
        cargo -V
    displayName: Query installed versions
  # Use bash for cross-platform env variable syntax
  - bash: cargo build --verbose --features "$FEATURES"
    displayName: Build
  - ${{ if not(startsWith(parameters.name, 'Linux')) }}:
    # Tests cannot run on Linux (missing ALSA driver)
    - bash: |
        cargo test --verbose --features "$FEATURES"
        cargo build --features "$FEATURES" --example test_list_ports
      displayName: Run tests
